{"remainingRequest":"C:\\EcommerceProject\\Online-Bookshop-Admin-Web\\store-front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\EcommerceProject\\Online-Bookshop-Admin-Web\\store-front\\node_modules\\rxjs\\_esm5\\util\\isNumeric.js","dependencies":[{"path":"C:\\EcommerceProject\\Online-Bookshop-Admin-Web\\store-front\\node_modules\\rxjs\\_esm5\\util\\isNumeric.js","mtime":499162500000},{"path":"C:\\EcommerceProject\\Online-Bookshop-Admin-Web\\store-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1528212247627},{"path":"C:\\EcommerceProject\\Online-Bookshop-Admin-Web\\store-front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._util_isArray PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n;\n//# sourceMappingURL=isNumeric.js.map\n",null]}